# Yaml is white-space sensitive (use 2 spaces to indent).

###
# Define a new window with an id of 'bar'. This window can then be opened
# via the Zebar cli by running 'zebar open bar --args <ARGS...>'.
#
# Docs regarding window: https://some-future-docs-link.com
window/bar:
  providers: ["self"]
  # Width of the window in physical pixels.
  width: "{{ self.args.MONITOR_WIDTH }}"
  # Height of the window in physical pixels.
  height: "14"
  # X-position of the window in physical pixels.
  position_x: "{{ self.args.MONITOR_X }}"
  # Set the postion of the bar to the top of the screen
  position_y: '{{ self.args.MONITOR_Y }}'

  # Set the position of the bar to the bottom of the screen
  # position_y: '{{ parseInt(self.args.MONITOR_HEIGHT) - 26 }}'
  
  # Whether to show the window above/below all others.
  # Allowed values: 'always_on_top', 'always_on_bottom', 'normal'.
  z_order: "normal"
  # Whether the window should be shown in the taskbar.
  shown_in_taskbar: false
  # Whether the window should have resize handles.
  resizable: false
  # Styles to apply globally within the window. For example, we can use
  # this to import the Nerdfonts icon font. Ref https://www.nerdfonts.com/cheat-sheet
  # for a cheatsheet of available Nerdfonts icons.
  global_styles: |
    @import "https://www.nerdfonts.com/assets/css/webfont.css";
  # CSS styles to apply to the root element within the window. Using CSS
  # nesting, we can also target nested elements (e.g. below we set the
  # color and margin-right of icons).
  styles: |
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    height: 100%;
    width: 100%;
    align-items: center;
    color: #ffffff;
    font-family: JetBrainsMono Nerd Font, monospace;
    font-size: 12px;
    margin: 0px;
    padding: 0px 4px;
    border-radius: 0px;
    background: rgb(38 38 40 / 95%);

  group/left:
    styles: |
      display: flex;
      align-items: center;

    template/glazewm_workspaces:
      styles: |
        display: flex;
        align-items: center;

        .workspace {
          background: rgb(255 255 255 / 0%);
          margin-right: 7px;
          padding: 1px 8px;
          color: rgb(255 255 255 / 60%);
          border: none;
          border-radius: 0px;
          cursor: pointer;

          &.displayed {
            background: rgb(255 255 255 / 100%);
          }

          &.focused,
          &:hover {
            background: rgb(255 255 255 / 30%);
          }
        }
      providers: ["glazewm"]
      events:
        - type: "click"
          fn_path: "script.js#focusWorkspace"
          selector: ".workspace"
      template: |
        @for (workspace of glazewm.currentWorkspaces) {
          <button
            class="workspace {{ workspace.hasFocus ? 'focused' : '' }} {{ workspace.isDisplayed ? 'displayed' : '' }}"
            id="{{ workspace.name }}"
          >
            {{ workspace.displayName ?? workspace.name }}
          </button>
        }

  group/center:
    styles: |
      justify-self: center;

    template/glazewm_other:
      providers: ["glazewm"]
      styles: |
        .binding-mode {
          background: rgb(255 255 255 / 70%);
          color: rgb(255 255 255 / 100%);
          border-radius: 5px;
          padding: 4px 6px;
        }

      template: |
        @for (bindingMode of glazewm.bindingModes) {
          <span class="binding-mode">
            {{ bindingMode.displayName ?? bindingMode.name }}
          </span>
        }

    # template/clock:
    #   providers: ['date']
    #   # Available date tokens: https://moment.github.io/luxon/#/formatting?id=table-of-tokens
    #   template: |
    #     {{ date.toFormat(date.now, 't | yyyy-MM-dd') }}

  group/right:
    styles: |
      justify-self: end;
      display: flex;

      .template {
        margin: 0 8px;
      }

    template/glazewm_other:
      providers: ["glazewm"]
      styles: |
        .tiling-direction {
          background: rgb(255 255 255 / 0%);
          color: rgb(255 255 255 / 50%);
          padding: 4px 6px;
          margin: 0;
        }

      template: |
        @if (glazewm.tilingDirection === 'horizontal') {
          󰓡 
        } @else {
         󱒓 
        }

    template/battery:
      providers: ["battery"]

      styles: |
        .charging-icon {
          font-size: 11px;
        }
      
      template: |
        BAT: @if (battery.isCharging) {󱐋 } {{ Math.round(battery.chargePercent) }}%

    template/clock:
      providers: ['date']
      # Available date tokens: https://moment.github.io/luxon/#/formatting?id=table-of-tokens
      template: |
        {{ date.toFormat(date.now, ' tt | D') }}
