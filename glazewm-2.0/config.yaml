general:
  # Commands to run when the WM has started (e.g. to run a script or launch
  # another application). Here we are running a batch script to start Zebar.
  startup_commands: ['shell-exec %userprofile%/.glzr/zebar/start.bat']

  # Whether to automatically focus windows underneath the cursor.
  focus_follows_cursor: true

  # Whether to switch back and forth between the previously focused
  # workspace when focusing the current workspace.
  toggle_workspace_on_refocus: false

  cursor_jump:
    # Whether to automatically move the cursor on the specified trigger.
    enabled: true

    # Trigger for cursor jump:
    # - 'monitor_focus': Jump when focus changes between monitors.
    # - 'window_focus': Jump when focus changes between windows.
    trigger: "monitor_focus"

gaps:
  # Gap between adjacent windows.
  inner_gap: "5px"

  # Gap between windows and the screen edge.
  outer_gap:
    top: "30px"
    right: "4px"
    bottom: "4px"
    left: "4px"

window_effects:
  # Visual effects to apply to the focused window.
  focused_window:
    # Highlight the window with a colored border.
    # ** Exclusive to Windows 11 due to API limitations.
    border:
      enabled: true
      color: "#8dbcff"

  # Visual effects to apply to non-focused windows.
  other_windows:
    border:
      enabled: true
      color: "#a1a1a1"

window_behavior:
  # New windows are created in this state whenever possible.
  # Allowed values: 'tiling', 'floating'.
  initial_state: "tiling"

  # Sets the default options for when a new window is created. This also
  # changes the defaults for when the state change commands, like
  # `set-floating`, are used without any flags.
  state_defaults:
    floating:
      # Whether to center floating windows by default.
      centered: true

      # Whether to show floating windows as always on top.
      shown_on_top: false

    fullscreen:
      # Maximize the window if possible. If the window doesn't have a
      # maximize button, then it'll be fullscreen'ed normally instead.
      maximized: false

      # Whether to show fullscreen windows as always on top.
      shown_on_top: false

workspaces:
  - name: "1"
    keep_alive: false
    bind_to_monitor: 2
  - name: "2"
    keep_alive: false
    bind_to_monitor: 2
  - name: "3"
    keep_alive: false
    bind_to_monitor: 2
  - name: "4"
    keep_alive: false
    bind_to_monitor: 2
  - name: "5"
    keep_alive: false
    bind_to_monitor: 1
  - name: "6"
    keep_alive: false
    bind_to_monitor: 1

window_rules:
  # - commands: ["move --workspace 1"]
  #   match:
  #     - window_process: { regex: "msedge|brave|chrome" }
  # - commands: ["move --workspace 2"]
  #   match:
  #     - window_process: { regex: "Code" }
  # - commands: ["move --workspace 3"]
  #   match:
  #     - window_title: { regex: "Obsidian" }
  # - commands: ["move --workspace 4"]
  #   match:
  #     - window_process: { regex: "zotero|WhatsApp" }
  # - commands: ["set-floating"]
  #   match:
  #     - window_process:
  #         {
  #           regex: "Settings|Go to|Explorer|Flow Laucher|Todoist|Control Panel|This PC|Everything|ShareX|OBS|",
  #         }
  - commands: ["ignore"]
    match:
      # Ignores any Zebar windows.
      - window_process: { equals: "zebar" }

      # Ignores picture-in-picture windows for browsers.
      - window_title: { regex: "[Pp]icture.in.[Pp]icture" }
        window_class: { regex: "Chrome_WidgetWin_1|MozillaDialogClass" }

      # Ignore rules for various 3rd-party apps.
      - window_process: { equals: "PowerToys.PowerAccent" }
      - window_process: { equals: "Lively" }
        window_class: { regex: "HwndWrapper*" }

      # Custom process rules
      - window_process: { regex: "Taskmgr|ScreenClippingHost" }


binding_modes:
  # When enabled, the focused window can be resized via arrow keys or HJKL.
  - name: "resize"
    keybindings:
      - commands: ["resize --width -2%"]
        bindings: ["left"]
      - commands: ["resize --width +2%"]
        bindings: ["right"]
      - commands: ["resize --height +2%"]
        bindings: ["up"]
      - commands: ["resize --height -2%"]
        bindings: ["down"]
      # Press enter/escape to return to default keybindings.
      - commands: ["wm-disable-binding-mode --name resize"]
        bindings: ["escape", "enter"]

  # When enabled, all keybindings are disabled except for alt+shift+p which
  # returns to default keybindings.
  - name: "pause"
    keybindings:
      - commands: ["wm-disable-binding-mode --name pause"]
        bindings: ["alt+shift+p"]

keybindings:
  # Move focused window in a given direction.
  - commands: ["move --direction left"]
    bindings: ["alt+shift+a"]
  - commands: ["move --direction right"]
    bindings: ["alt+shift+s"]
  # - commands: ['move --direction up']
  #   bindings: ['alt+shift+k', 'alt+shift+up']
  # - commands: ['move --direction down']
  #   bindings: ['alt+shift+j', 'alt+shift+down']

  # As an alternative to the resize keybindings above, resize mode enables
  # resizing via arrow keys or HJKL. The binding mode is defined above with
  # the name 'resize'.
  - commands: ["wm-enable-binding-mode --name resize"]
    bindings: ["alt+r"]

  # Disables all keybindings until alt+shift+p is pressed again.
  - commands: ["wm-enable-binding-mode --name pause"]
    bindings: ["alt+shift+p"]

  # Change tiling direction. This determines where new tiling windows will
  # be inserted.
  - commands: ["toggle-tiling-direction"]
    bindings: ["alt+v"]

  # Change focus from tiling windows -> floating -> fullscreen.
  - commands: ["toggle-tiling"]
    bindings: ["alt+f"]

  # Close focused window.
  - commands: ["close"]
    bindings: ["alt+q"]

  # Kill GlazeWM process safely.
  - commands: ["wm-exit", "shell-exec taskKill /IM zebar.exe"]
    bindings: ["alt+shift+e"]

  # Re-evaluate configuration file.
  - commands: ["wm-reload-config", "shell-exec taskKill /IM zebar.exe", "shell-exec %userprofile%/.glzr/zebar/start.bat"]
    bindings: ["alt+shift+r"]

  # Redraw all windows.
  - commands: ["wm-redraw"]
    bindings: ["alt+shift+w"]

  # Launch CMD terminal. Alternatively, use `shell-exec wt` or
  # `shell-exec %ProgramFiles%/Git/git-bash.exe` to start Windows
  # Terminal and Git Bash respectively.
  - commands: ["shell-exec wt"]
    bindings: ["alt+x"]
  - commands:
      [
        "focus --workspace 3",
        "shell-exec %LOCALAPPDATA%/Programs/obsidian/Obsidian.exe",
      ]
    bindings: ["alt+shift+o"]

  # Change focus to a workspace defined in `workspaces` config.
  - commands: ["focus --workspace 1"]
    bindings: ["alt+1"]
  - commands: ["focus --workspace 2"]
    bindings: ["alt+2"]
  - commands: ["focus --workspace 3"]
    bindings: ["alt+3"]
  - commands: ["focus --workspace 4"]
    bindings: ["alt+4"]
  - commands: ["focus --workspace 5"]
    bindings: ["alt+5"]
  - commands: ["focus --workspace 6"]
    bindings: ["alt+6"]

  # Move focused window to a workspace defined in `workspaces` config.
  - commands: ["move --workspace 1", "focus --workspace 1"]
    bindings: ["alt+shift+1"]
  - commands: ["move --workspace 2", "focus --workspace 2"]
    bindings: ["alt+shift+2"]
  - commands: ["move --workspace 3", "focus --workspace 3"]
    bindings: ["alt+shift+3"]
  - commands: ["move --workspace 4", "focus --workspace 4"]
    bindings: ["alt+shift+4"]
  - commands: ["move --workspace 5", "focus --workspace 5"]
    bindings: ["alt+shift+5"]
  - commands: ["move --workspace 6", "focus --workspace 6"]
    bindings: ["alt+shift+6"]
